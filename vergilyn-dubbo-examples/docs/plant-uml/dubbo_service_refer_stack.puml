@startuml
skinparam DefaultFontSize 18

skinparam activity{
  BackgroundColor<< important >> LightSkyBlue
}

(*)--> "ReferenceConfig#createProxy(Map<String, String> map)" AS CreateProxy
-->[ org.apache.dubbo.rpc.proxy.javassist.JavassistProxyFactory] "<color:purple>new</color> proxy0(java.lang.reflect.InvocationHandler arg0)" AS proxy0 <<important>>
note right
通过javassist解析service-interfaces生成的proxy-class `proxy0`

EX.
```
public class proxy0
    extends
        org.apache.dubbo.common.bytecode.Proxy
    implements
        com.vergilyn.examples.api.ProviderFirstApi {

    public static java.lang.reflect.Method[] methods =
              {"sayHello", "sayGoodbye", "$destroy", "$echo"};
    private java.lang.reflect.InvocationHandler handler;

    public proxy0(java.lang.reflect.InvocationHandler arg0){
        handler=$1;
    }

    @Override  // Proxy.java
    public Object newInstance(java.lang.reflect.InvocationHandler h) {
       return new org.apache.dubbo.common.bytecode.proxy0($1);
    }

    @Override
    public java.lang.String sayHello(java.lang.String arg0){
        Object[] args = new Object[1];
        args[0] = ($w)$1;
        Object ret = handler.invoke(this, methods[0], args);
        return (java.lang.String)ret;
    }
    // ignore...
}
```
endnote

-->[ handler] "<color:purple>new</color> InvokerInvocationHandler(Invoker<?> invoker)" AS InvokerInvocationHandler
InvokerInvocationHandler .[#Indigo].>[ rpc-invocation] "<color:purple>new</color> RpcInvocation(Method method, String serviceName, Object[] arguments)"

InvokerInvocationHandler -->[ invoker] "<color:red>ReferenceConfig.**invoker**</color>" AS invoker <<important>>
-->[ invoker] "<color:purple>new</color> AsyncToSyncInvoker(Invoker<T> invoker)"

-->[ invoker] "<color:purple>new</color> DubboInvoker(Class<T> serviceType, URL url, ExchangeClient[] clients, Set<Invoker<?>> invokers)" AS DubboInvoker

DubboInvoker -->[ <color:BLUE>**handler**</color>] "**anonymous-class**, <color:red>**DubboProtocol.requestHandler**</color>" AS CoreHandler <<important>>

DubboInvoker -->[ clients] "<color:purple>new</color> HeaderExchangeClient(Client client, boolean startTimer)" AS HeaderExchangeClient

HeaderExchangeClient .[#Indigo].>[ handler] "<color:purple>new</color> DecodeHandler(ChannelHandler handler)" AS DecodeHandler
DecodeHandler -->[ handler] "<color:purple>new</color> HeaderExchangeHandler(ExchangeHandler handler)" AS HeaderExchangeHandler
HeaderExchangeHandler -->[ handler] CoreHandler

HeaderExchangeClient -->[ channel] "<color:purple>new</color> HeaderExchangeChannel(Channel channel)" AS HeaderExchangeChannel.channel

HeaderExchangeChannel.channel -->[ channel] NettyClient

HeaderExchangeClient -->[ client] "<color:purple>new</color> NettyClient(URL url, final ChannelHandler handler)" AS NettyClient <<important>>

NettyClient -->[ handler] "<color:purple>new</color> MultiMessageHandler(ChannelHandler handler)" AS MultiMessageHandler
MultiMessageHandler -->[ handler] "<color:purple>new</color> HeartbeatHandler(ChannelHandler handler)" AS HeartbeatHandler
HeartbeatHandler -->[ handler] "<color:purple>new</color> AllChannelHandler(ChannelHandler handler, URL url)" AS AllChannelHandler
AllChannelHandler -->[ handler] DecodeHandler

NettyClient -->[ <color:red>**channel**] "<color:blue>bootstrap.connect(address).channel()</color>" AS NettyClient.channel <<important>>
NettyClient.channel .[#Indigo].>[ NettyClient#getChannel()] "<color:purple>new</color> NettyChannel(Channel channel, URL url, ChannelHandler handler)" AS NettyChannel
NettyChannel --> "channel" AS NettyChannel.channel
NettyChannel.channel -[#green]-> NettyClient.channel
NettyChannel --> "handler" AS NettyChannel.handler
NettyChannel.handler -[#green]-> NettyClient

NettyClient.channel -[#Navy]->[ NettyClient childHandler] "
decoder, <color:purple>new</color> InternalDecoder()
encoder, <color:purple>new</color> InternalEncoder()
client-idle-handler, <color:purple>new</color> IdleStateHandler(heartbeatInterval, 0, 0, MILLISECONDS)" AS NettyClient.childHandler

NettyClient.childHandler -[#Navy]-> "<color:purple>new</color> NettyClientHandler(URL url, ChannelHandler handler)" AS NettyClientHandler <<important>>
NettyClientHandler --> "handler" AS NettyClientHandler.handler
NettyClientHandler.handler -[#green]-> NettyClient










































@enduml