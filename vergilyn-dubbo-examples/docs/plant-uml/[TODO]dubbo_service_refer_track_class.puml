@startuml
/' 2020-04-13, TODO, "dubbo_service_refer_track.puml"改成类图
Class01 <|-- Class02 Extension（扩展）
Class03 *-- Class04 Composition（组合
Class05 o-- Class06 Aggregation（聚合）
Class07 .. Class08
Class09 -- Class10

-			private
#			protected
~			package private
+			public
'/
skinparam DefaultFontSize 18

class ReferenceConfig<T> {
   -private transient volatile Invoker<?> invoker;
   -T createProxy(Map<String, String> map);
}

class JavassistProxyFactory<T> {
    -T getProxy(Invoker<T> invoker, Class<?>[] interfaces);
}

class proxy0{
    +public static java.lang.reflect.Method[] methods =
              {"sayHello", "sayGoodbye", "$destroy", "$echo"};

    -private java.lang.reflect.InvocationHandler handler;
}
note left of proxy0
public class proxy0
    extends
        org.apache.dubbo.common.bytecode.Proxy
    implements
        com.vergilyn.examples.api.ProviderFirstApi {

    public static java.lang.reflect.Method[] methods =
              {"sayHello", "sayGoodbye", "$destroy", "$echo"};
    private java.lang.reflect.InvocationHandler handler;

    public proxy0(java.lang.reflect.InvocationHandler arg0){
        handler=$1;
    }

    @Override  // Proxy.java
    public Object newInstance(java.lang.reflect.InvocationHandler h) {
       return new org.apache.dubbo.common.bytecode.proxy0($1);
    }

    @Override
    public java.lang.String sayHello(java.lang.String arg0){
        Object[] args = new Object[1];
        args[0] = ($w)$1;
        Object ret = handler.invoke(this, methods[0], args);
        return (java.lang.String)ret;
    }
    // ignore...
endnote

ReferenceConfig o-- JavassistProxyFactory: proxy
JavassistProxyFactory o-- proxy0

class InvokerInvocationHandler{
    -private final Invoker<?> invoker;
    +public InvokerInvocationHandler(Invoker<?> handler);
}

class DubboProtocol{
    -<color:red>private ExchangeHandler requestHandler = new ExchangeHandlerAdapter(){...};
    #protected final Set<Invoker<?>> invokers = new ConcurrentHashSet<Invoker<?>>();

    +public <T> Invoker<T> refer(Class<T> type, URL url);
}

ReferenceConfig *.. DubboProtocol: invoker

class AsyncToSyncInvoker<T>{
    -private Invoker<T> invoker;
}

DubboProtocol *.. AsyncToSyncInvoker

class DubboInvoker<T> {
    -private final ExchangeClient[] clients;
    -private final Set<Invoker<?>> invokers;
}

AsyncToSyncInvoker o-- DubboInvoker: invoker
DubboInvoker .[#green].> DubboProtocol: invokers = DubboProtocol.invokers

DubboInvoker o-- HeaderExchangeClient: clients
class HeaderExchangeClient{
    -private final Client client;
    -private final ExchangeChannel channel;
}

@enduml